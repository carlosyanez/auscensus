[{"path":"/articles/house_getting_data.html","id":"figuring-out-what-to-retrieve","dir":"Articles","previous_headings":"","what":"Figuring out what to retrieve","title":"Auscensus - Getting Data","text":"first figure data points going retrieved. order answer , following questions need answered: statistics want pull , .e. data point table? geographical structure want (e.g. SAs, LGAs, electorates)? want data just handful? years want data ? answer questions, {auscensus} comes family functions, starting list_. figure data point retrieve, first step retrieve list available tables, return code plus year published. can achieved list_census_tables() function comes two -built filters. first one allows filter table number, whereas second uses regular expression filter table names Please note even table names changed year year, tables number contain data. table selected, list_census_attributes() can used selected data point. Since tables can contain many attributes, thus function also allows filter results regular expression. instance, pick table 04 (Age Sex) want find data points 60 year olds, plus total, can use command. get geographical structures available, list_census_geo_types() can help. selected appropriate value, list_census_geo() can used search particular divisions. example , confirming data avaible three inner-Melbourne Local Government areas. Please note functions show data available data packs - file imported, associated year won’t presented results.","code":"list_census_tables() #> # A tibble: 165 × 7 #>    Number `Table Name`                                                            `Table Population`                   `2021` `2016` `2011` `2006` #>    <chr>  <chr>                                                                   <chr>                                <lgl>  <lgl>  <lgl>  <lgl>  #>  1 01     Selected Person Characteristics by Sex                                  Persons                              TRUE   TRUE   TRUE   NA     #>  2 01     Selected Person Characteristics by Sex (First Release Processing)       Persons                              NA     NA     NA     TRUE   #>  3 02     Selected Medians and Averages                                           NA                                   TRUE   TRUE   TRUE   TRUE   #>  4 03     Place of Usual Residence by Place of Enumeration on Census Night by Age Persons (excludes overseas visitors) TRUE   NA     NA     NA     #>  5 03     Place of Usual Residence on Census Night by Age                         Persons                              NA     TRUE   TRUE   TRUE   #>  6 04     Age by Sex                                                              Persons                              TRUE   TRUE   TRUE   TRUE   #>  7 05     Registered Marital Status by Age by Sex                                 Persons aged 15 years and over       TRUE   TRUE   TRUE   TRUE   #>  8 06     Social Marital Status by Age by Sex                                     Persons aged 15 years and over       TRUE   TRUE   TRUE   TRUE   #>  9 07     Indigenous Status by Age by Sex                                         Persons                              TRUE   TRUE   TRUE   TRUE   #> 10 08     Ancestry by Country of Birth of Parents                                 Responses and persons                TRUE   TRUE   NA     TRUE   #> # … with 155 more rows list_census_tables(\"20\") #> # A tibble: 4 × 7 #>   Number `Table Name`                                                  `Table Population`             `2021` `2016` `2011` `2006` #>   <chr>  <chr>                                                         <chr>                          <lgl>  <lgl>  <lgl>  <lgl>  #> 1 20     Count of Selected Long-Term Health Conditions by Age by Sex   Persons                        TRUE   NA     NA     NA     #> 2 20     Unpaid Domestic Work:  Number of House by Age by Sex          Persons aged 15 years and over NA     TRUE   NA     NA     #> 3 20     Unpaid Domestic Work:  Number of Hours by Age by Sex          Persons aged 15 years and over NA     NA     TRUE   NA     #> 4 20     Unpaid Assistance to a Person with a Disability by Age by Sex Persons aged 15 years and over NA     NA     NA     TRUE list_census_tables(table_name_regex = \"[Cc]ountry\") #> # A tibble: 6 × 7 #>   Number `Table Name`                                                                    `Table Population`    `2021` `2016` `2006` `2011` #>   <chr>  <chr>                                                                           <chr>                 <lgl>  <lgl>  <lgl>  <lgl>  #> 1 08     Ancestry by Country of Birth of Parents                                         Responses and persons TRUE   TRUE   TRUE   NA     #> 2 09     Country of Birth of Person by Age by Sex                                        Persons               TRUE   TRUE   NA     NA     #> 3 09     Country of Birth of Person by Sex                                               Persons               NA     NA     TRUE   TRUE   #> 4 10     Country of Birth of Person by Year of Arrival in Australia                      Persons born overseas TRUE   TRUE   TRUE   TRUE   #> 5 26     Family Composition and Country of Birth of Parents by Age of Dependent Children Dependent children    NA     TRUE   NA     NA     #> 6 30     Family Composition and Country of Birth of Parents by Age of Dependent Children Dependent children    TRUE   NA     NA     NA list_census_attributes(number=\"04\",table_name_regex = \"60|[Tt]otal\") #> # A tibble: 15 × 6 #>    Table Attribute                        `2021` `2016` `2011` `2006` #>    <chr> <chr>                            <lgl>  <lgl>  <lgl>  <lgl>  #>  1 04    Age_years_60_males               TRUE   TRUE   TRUE   NA     #>  2 04    Age_years_60_females             TRUE   TRUE   TRUE   NA     #>  3 04    Age_years_60_persons             TRUE   TRUE   TRUE   NA     #>  4 04    Age_years_60_64_years_males      TRUE   TRUE   TRUE   NA     #>  5 04    Age_years_60_64_years_females    TRUE   TRUE   TRUE   NA     #>  6 04    Age_years_60_64_years_persons    TRUE   TRUE   TRUE   NA     #>  7 04    Total_males                      TRUE   TRUE   TRUE   TRUE   #>  8 04    Total_females                    TRUE   TRUE   TRUE   TRUE   #>  9 04    Total_persons                    TRUE   TRUE   TRUE   TRUE   #> 10 04    Age (Years): 60_males            NA     NA     NA     TRUE   #> 11 04    Age (Years): 60_females          NA     NA     NA     TRUE   #> 12 04    Age (Years): 60_persons          NA     NA     NA     TRUE   #> 13 04    Age (Years): 60-64 Years_males   NA     NA     NA     TRUE   #> 14 04    Age (Years): 60-64 Years_females NA     NA     NA     TRUE   #> 15 04    Age (Years): 60-64 Years_persons NA     NA     NA     TRUE list_census_geo_types() #> # A tibble: 31 × 5 #>    ASGS_Structure `2021` `2016` `2011` `2006` #>    <chr>          <lgl>  <lgl>  <lgl>  <lgl>  #>  1 AUS            TRUE   TRUE   TRUE   TRUE   #>  2 CD             NA     NA     NA     TRUE   #>  3 CED            TRUE   TRUE   TRUE   TRUE   #>  4 GCCSA          TRUE   TRUE   TRUE   NA     #>  5 IARE           TRUE   TRUE   TRUE   TRUE   #>  6 ILOC           TRUE   TRUE   TRUE   TRUE   #>  7 IREG           TRUE   TRUE   TRUE   TRUE   #>  8 JWSLA          NA     NA     NA     TRUE   #>  9 JWSLA_extended NA     NA     NA     TRUE   #> 10 LGA            TRUE   TRUE   TRUE   TRUE   #> # … with 21 more rows list_census_geo(\"LGA\",geo_name_regex = \"[Mm]elbourne|[Ss]tonnington|Yarra\") #> # A tibble: 5 × 6 #>   ASGS_Structure Census_Name  `2021` `2016` `2011` `2006` #>   <chr>          <chr>        <lgl>  <lgl>  <lgl>  <lgl>  #> 1 LGA            Melbourne    TRUE   TRUE   TRUE   TRUE   #> 2 LGA            Stonnington  TRUE   TRUE   TRUE   TRUE   #> 3 LGA            Yarra        TRUE   TRUE   TRUE   TRUE   #> 4 LGA            Yarra Ranges TRUE   TRUE   TRUE   TRUE   #> 5 LGA            Yarrabah     TRUE   TRUE   TRUE   TRUE"},{"path":"/articles/house_getting_data.html","id":"retrieving-census-data","dir":"Articles","previous_headings":"","what":"Retrieving Census Data","title":"Auscensus - Getting Data","text":"questions resolved, possible use {auscensus} retrieve data get_census_data(). function present result {table, year, geopgrahy} combination different element within list. example: default, command store table parquet file cache directory. want stop happening use argument cache=FALSE. Similarly default behaivour read data cached files extracting data pack. want ignore cache, use ignore_cache=TRUE.","code":"data <- get_census_data(census_table = list_census_tables(\"04\"),                         geo_structure = \"LGA\")    names(data)    #> [1] \"2006_LGA_B04\" \"2011_LGA_B04\" \"2016_LGA_G04\" \"2021_LGA_G04\" data$`2006_LGA_B04` #> # A tibble: 685 × 309 #>     Year Unit     Censu…¹ Age (…² Age (…³ Age (…⁴ Age (…⁵ Age (…⁶ Age (…⁷ Age (…⁸ Age (…⁹ Age (…˟ Age (…˟ Age (…˟ Age (…˟ Age (…˟ Age (…˟ Age (…˟ Age (…˟ Age (…˟ Age (…˟ #>    <dbl> <chr>    <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1  2006 Unincor… LGA893…    2214    2121    4335    2018    1948    3966    2091    1947    4038    2033    1856    3889    1926    1926    3852   10282    9798   20080 #>  2  2006 No Usua… LGA894…       6       4      10       5       7      12       6       3       9       4       3       7       5       4       9      26      21      47 #>  3  2006 Albury   LGA100…     337     305     642     313     307     620     267     286     553     309     296     605     298     296     594    1524    1490    3014 #>  4  2006 Armidal… LGA101…     137     144     281     132     128     260     146     127     273     125     129     254     164     132     296     704     660    1364 #>  5  2006 Ashfield LGA101…     265     246     511     232     200     432     219     209     428     235     183     418     211     210     421    1162    1048    2210 #>  6  2006 Auburn   LGA102…     541     562    1103     545     468    1013     510     473     983     457     458     915     463     422     885    2516    2383    4899 #>  7  2006 Ballina  LGA102…     191     197     388     190     176     366     218     194     412     197     207     404     219     223     442    1015     997    2012 #>  8  2006 Balrana… LGA103…       8      16      24      28      12      40      19      13      32      16      21      37      16      14      30      87      76     163 #>  9  2006 Banksto… LGA103…    1331    1240    2571    1337    1239    2576    1286    1241    2527    1367    1215    2582    1257    1195    2452    6578    6130   12708 #> 10  2006 Bathurs… LGA104…     276     227     503     225     222     447     240     223     463     248     202     450     251     241     492    1240    1115    2355 #> # … with 675 more rows, 288 more variables: `Age (Years): 5_males` <dbl>, `Age (Years): 5_females` <dbl>, `Age (Years): 5_persons` <dbl>, `Age (Years): 6_males` <dbl>, #> #   `Age (Years): 6_females` <dbl>, `Age (Years): 6_persons` <dbl>, `Age (Years): 7_males` <dbl>, `Age (Years): 7_females` <dbl>, `Age (Years): 7_persons` <dbl>, #> #   `Age (Years): 8_males` <dbl>, `Age (Years): 8_females` <dbl>, `Age (Years): 8_persons` <dbl>, `Age (Years): 9_males` <dbl>, `Age (Years): 9_females` <dbl>, #> #   `Age (Years): 9_persons` <dbl>, `Age (Years): 5-9 Years_males` <dbl>, `Age (Years): 5-9 Years_females` <dbl>, `Age (Years): 5-9 Years_persons` <dbl>, #> #   `Age (Years): 10_males` <dbl>, `Age (Years): 10_females` <dbl>, `Age (Years): 10_persons` <dbl>, `Age (Years): 11_males` <dbl>, `Age (Years): 11_females` <dbl>, #> #   `Age (Years): 11_persons` <dbl>, `Age (Years): 12_males` <dbl>, `Age (Years): 12_females` <dbl>, `Age (Years): 12_persons` <dbl>, `Age (Years): 13_males` <dbl>, #> #   `Age (Years): 13_females` <dbl>, `Age (Years): 13_persons` <dbl>, `Age (Years): 14_males` <dbl>, `Age (Years): 14_females` <dbl>, `Age (Years): 14_persons` <dbl>, …"},{"path":"/articles/house_getting_data.html","id":"getting-ready-to-use-summaries","dir":"Articles","previous_headings":"","what":"Getting-ready to use summaries","title":"Auscensus - Getting Data","text":"Although get_census_data(), provides great flexitibilty data processing, cases just interest get just table limited number variables analysis. purpose, package provides get_census_summary(). instance, interested getting numbers 60 year old men LGA 2021 census (see ), can use: Data point “attribute” names sometimes change name Census Census. purpose attribute can either vector strings named list, containing equivalent attribute names. instance, get number 60 year men women across censuses (years included default): Finally, function contains two parameters interest: geo_units filters results given vector names; reference_total passes function vector names another attribute used “total” value calculate attributes percentage said total value. instance, want narrow results LGAs Melbourne, Stonnington Yarra, present results percentage total population, :","code":"get_census_summary(table_number = \"04\",                    attributes = \"Age_years_60_males\",                    geo_structure = \"LGA\",                    selected_years = \"2021\") #> # A tibble: 565 × 4 #>     Year Unit              Attribute          Value #>    <dbl> <chr>             <chr>              <dbl> #>  1  2021 Albury            Age_years_60_males   368 #>  2  2021 Armidale Regional Age_years_60_males   157 #>  3  2021 Ballina           Age_years_60_males   325 #>  4  2021 Balranald         Age_years_60_males    17 #>  5  2021 Bathurst Regional Age_years_60_males   306 #>  6  2021 Bayside (Nsw)     Age_years_60_males   854 #>  7  2021 Bega Valley       Age_years_60_males   332 #>  8  2021 Bellingen         Age_years_60_males   103 #>  9  2021 Berrigan          Age_years_60_males    68 #> 10  2021 Blacktown         Age_years_60_males  1906 #> # … with 555 more rows get_census_summary(table_number = \"04\",                    attributes = list(\"60 year old male\"=c(\"Age_years_60_males\",\"Age (Years): 60_males\"),                                      \"60 year old female\"=c(\"Age_years_60_males\",\"Age (Years): 60_females\")),                    geo_structure = \"LGA\") #> # A tibble: 3,075 × 4 #>     Year Unit               Attribute          Value #>    <dbl> <chr>              <chr>              <dbl> #>  1  2006 Unincorporated Act 60 year old male    1702 #>  2  2006 Unincorporated Act 60 year old female  1588 #>  3  2006 No Usual Address   60 year old male       3 #>  4  2006 No Usual Address   60 year old female     3 #>  5  2006 Albury             60 year old male     229 #>  6  2006 Albury             60 year old female   217 #>  7  2006 Armidale Dumaresq  60 year old male     112 #>  8  2006 Armidale Dumaresq  60 year old female   122 #>  9  2006 Ashfield           60 year old male     164 #> 10  2006 Ashfield           60 year old female   157 #> # … with 3,065 more rows get_census_summary(table_number = \"04\",                    attributes = list(\"60 year old male\"=c(\"Age_years_60_males\",\"Age (Years): 60_males\"),                                      \"60 year old female\"=c(\"Age_years_60_males\",\"Age (Years): 60_females\")),                    geo_units = c(\"Melbourne\",\"Stonnington\",\"Yarra\"),                    reference_total = list(\"Total\"=c(\"Total_persons\")),                    geo_structure = \"LGA\") #> # A tibble: 15 × 6 #>     Year Unit        Attribute          Value  Total Percentage #>    <dbl> <chr>       <chr>              <dbl>  <dbl>      <dbl> #>  1  2006 Melbourne   60 year old male     306  71380    0.00429 #>  2  2006 Melbourne   60 year old female   234  71380    0.00328 #>  3  2006 Stonnington 60 year old male     473  89882    0.00526 #>  4  2006 Stonnington 60 year old female   498  89882    0.00554 #>  5  2006 Yarra       60 year old male     266  69330    0.00384 #>  6  2006 Yarra       60 year old female   295  69330    0.00426 #>  7  2011 Melbourne   60 year old male     313  93626    0.00334 #>  8  2011 Stonnington 60 year old male     431  93145    0.00463 #>  9  2011 Yarra       60 year old male     332  74090    0.00448 #> 10  2016 Melbourne   60 year old male     379 135959    0.00279 #> 11  2016 Stonnington 60 year old male     444 103832    0.00428 #> 12  2016 Yarra       60 year old male     375  86657    0.00433 #> 13  2021 Melbourne   60 year old male     492 149615    0.00329 #> 14  2021 Stonnington 60 year old male     528 104703    0.00504 #> 15  2021 Yarra       60 year old male     425  90114    0.00472"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carlos Yáñez Santibáñez. Author, maintainer. Craig Alexander. Thesis advisor. Kyle Walker. Copyright holder. Australian Bureau Statistics. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yáñez Santibáñez C (2022). auscensus: Access Australian Census Data (2006-2021). R package version 0.0.1.0000, https://carlosyanez.github.io/auscensus/.","code":"@Manual{,   title = {auscensus: Access Australian Census Data (2006-2021)},   author = {Carlos {Yáñez Santibáñez}},   year = {2022},   note = {R package version 0.0.1.0000},   url = {https://carlosyanez.github.io/auscensus/}, }"},{"path":"/index.html","id":"auscensus","dir":"","previous_headings":"","what":"auscensus","title":"auscensus","text":"auscensus provides way read data Australian Bureau Statistics Data Packs. motivation behind package able easily pull data points multiple geographic structures different censuses. Currently, package works well ABS data packs 2011 2021.","code":""},{"path":"/index.html","id":"installation-and-pre-requisites","dir":"","previous_headings":"","what":"Installation and pre-requisites","title":"auscensus","text":"current version package (0.0.1.0000) yet CRAN. install package, can download GitHub: Alternatively, install r-universe:","code":"devtools::install_github(\"carlosyanez/auscensus\") # Enable this universe options(repos = c(     carlosyanez = 'https://carlosyanez.r-universe.dev',     CRAN = 'https://cloud.r-project.org'))  # Install some packages install.packages('auscensus')"},{"path":"/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use.","title":"auscensus","text":"package provides series functions access different censuses. reference check articles.","code":""},{"path":"/index.html","id":"attention---batteries-not-included","dir":"","previous_headings":"","what":"ATTENTION - BATTERIES NOT INCLUDED!","title":"auscensus","text":"Please note package made interact Census Data Packs include . get started, please follow article.","code":""},{"path":"/index.html","id":"issues-bugs-ideas","dir":"","previous_headings":"","what":"Issues? bugs? Ideas?","title":"auscensus","text":"find something quite right, please post issue. ideas, requests, want contribute, please let know!","code":""},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"auscensus","text":"Data sourced directly Australian Bureau Statistics. Historical results Commonwealth elections published AEC’s Tally Room archive. functions use code written {tigris} package, maintained Kyle Walker. Census icons created noomtah - Flaticon.","code":""},{"path":"/index.html","id":"acknowledgment-of-country","dir":"","previous_headings":"","what":"Acknowledgment of Country","title":"auscensus","text":"author package acknowledges Boonwurrung/Bunurong Wurrundjeri Woi Wurrung peoples Eastern Kulin Nation Traditional Owners Custodians land package created, pays respect Elders past, present emerging.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 auspol authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/census_datapacks.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to download  data — census_datapacks","title":"Helper function to download  data — census_datapacks","text":"Helper function download  data","code":""},{"path":"/reference/census_datapacks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to download  data — census_datapacks","text":"","code":"census_datapacks()"},{"path":"/reference/census_datapacks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to download  data — census_datapacks","text":"nothing","code":""},{"path":"/reference/data_census_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to update/download  data — data_census_delete","title":"Helper function to update/download  data — data_census_delete","text":"Helper function update/download  data","code":""},{"path":"/reference/data_census_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to update/download  data — data_census_delete","text":"","code":"data_census_delete(file = NULL)"},{"path":"/reference/data_census_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to update/download  data — data_census_delete","text":"file delete - defaults (provide full path, can obtain data_census_info)","code":""},{"path":"/reference/data_census_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to update/download  data — data_census_delete","text":"nothing","code":""},{"path":"/reference/data_census_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to download  data — data_census_download","title":"Helper function to download  data — data_census_download","text":"Helper function download  data","code":""},{"path":"/reference/data_census_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to download  data — data_census_download","text":"","code":"data_census_download(   download_dir,   census_year = NULL,   download_method = \"wget\" )"},{"path":"/reference/data_census_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to download  data — data_census_download","text":"download_dir Full path download census files (required) census_year census year download (default ) download_method method pass download.file() (\"wget\" default)","code":""},{"path":"/reference/data_census_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to download  data — data_census_download","text":"nothing","code":""},{"path":"/reference/data_census_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to update/download  data — data_census_import","title":"Helper function to update/download  data — data_census_import","text":"Helper function update/download  data","code":""},{"path":"/reference/data_census_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to update/download  data — data_census_import","text":"","code":"data_census_import(file)"},{"path":"/reference/data_census_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to update/download  data — data_census_import","text":"file file import cache","code":""},{"path":"/reference/data_census_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to update/download  data — data_census_import","text":"nothing","code":""},{"path":"/reference/data_census_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to update/download  data — data_census_info","title":"Helper function to update/download  data — data_census_info","text":"Helper function update/download  data","code":""},{"path":"/reference/data_census_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to update/download  data — data_census_info","text":"","code":"data_census_info()"},{"path":"/reference/data_census_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to update/download  data — data_census_info","text":"nothing","code":""},{"path":"/reference/find_census_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to find cache folder — find_census_cache","title":"Helper function to find cache folder — find_census_cache","text":"Helper function find cache folder","code":""},{"path":"/reference/find_census_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to find cache folder — find_census_cache","text":"","code":"find_census_cache()"},{"path":"/reference/find_census_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to find cache folder — find_census_cache","text":"nothing","code":""},{"path":"/reference/get_census_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain get data from filename — get_census_data","title":"Obtain get data from filename — get_census_data","text":"Obtain get data filename","code":""},{"path":"/reference/get_census_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain get data from filename — get_census_data","text":"","code":"get_census_data(   census_table,   geo_structure,   selected_years = list_census_years(),   cache = TRUE,   ignore_cache = FALSE )"},{"path":"/reference/get_census_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain get data from filename — get_census_data","text":"census_table list tables, format output list_census_tables() geo_structure vector strings geo structures (e.g. SA1,LGA,CED) selected_years years filter cache TRUE, save query cache (parquet file) later use ignore_cache TRUE, ignore cached files","code":""},{"path":"/reference/get_census_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain get data from filename — get_census_data","text":"data frame data file, filtered division election year","code":""},{"path":"/reference/get_census_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain get data from filename — get_census_summary","title":"Obtain get data from filename — get_census_summary","text":"Obtain get data filename","code":""},{"path":"/reference/get_census_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain get data from filename — get_census_summary","text":"","code":"get_census_summary(   table_number,   geo_structure,   attributes,   geo_units = NULL,   selected_years = list_census_years(),   reference_total = NULL,   percentage_scale = 1,   cache = TRUE,   ignore_cache = FALSE )"},{"path":"/reference/get_census_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain get data from filename — get_census_summary","text":"table_number number selected table geo_structure vector strings geo structures (e.g. SA1,LGA,CED) attributes attribure geo_units geo units selected_years years filter reference_total reference total percentage_scale 1 percentage presented scale 0-1, 100 shown 0%-100% cache TRUE, save query cache (parquet file) later use ignore_cache TRUE, ignore cached files","code":""},{"path":"/reference/get_census_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain get data from filename — get_census_summary","text":"data frame data file, filtered division election year","code":""},{"path":[]},{"path":"/reference/list_census_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of attributes for a given census tables, across all time — list_census_attributes","title":"Get names of attributes for a given census tables, across all time — list_census_attributes","text":"Get list available geopgrahies, filterable type name.","code":""},{"path":"/reference/list_census_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of attributes for a given census tables, across all time — list_census_attributes","text":"","code":"list_census_attributes(number = NULL, table_name_regex = NULL)"},{"path":"/reference/list_census_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of attributes for a given census tables, across all time — list_census_attributes","text":"number vector containing one table numbers table_name_regex string regular expression filter table names (.e. elements containing Country : \"Country\")","code":""},{"path":"/reference/list_census_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of attributes for a given census tables, across all time — list_census_attributes","text":"tibble, showing geo type, available year","code":""},{"path":"/reference/list_census_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of attributes for a given census tables, across all time — list_census_attributes","text":"","code":"if (FALSE) { # Get list of all divisions list_census_attributes()  }"},{"path":"/reference/list_census_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get census geographies, filterable — list_census_geo","title":"Get census geographies, filterable — list_census_geo","text":"Get list available geopgrahies, filterable type name.","code":""},{"path":"/reference/list_census_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get census geographies, filterable — list_census_geo","text":"","code":"list_census_geo(geo_types = NULL, geo_names = NULL, geo_name_regex = NULL)"},{"path":"/reference/list_census_geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get census geographies, filterable — list_census_geo","text":"geo_types vector containing one geography types (.e. \"STE\",\"CED\",\"SA1\" ). NULL default. geo_names vector containing one geography names (.e. \"Melbourne\", \"Yarra\",\"Stonnington\" LGAs). NULL default. geo_name_regex string regular expression filter geograhpy names (.e. elements starting M : \"$M\")","code":""},{"path":"/reference/list_census_geo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get census geographies, filterable — list_census_geo","text":"tibble, showing geo type, available year","code":""},{"path":"/reference/list_census_geo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get census geographies, filterable — list_census_geo","text":"","code":"if (FALSE) { # Get list of all divisions list_census_geo()  }"},{"path":"/reference/list_census_geo_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Geography types. — list_census_geo_types","title":"Get Geography types. — list_census_geo_types","text":"simple function listing geography types (e.g. SAx, CED, etc.), data pack imported.","code":""},{"path":"/reference/list_census_geo_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Geography types. — list_census_geo_types","text":"","code":"list_census_geo_types()"},{"path":"/reference/list_census_geo_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Geography types. — list_census_geo_types","text":"tibble, showing geotype, available year","code":""},{"path":"/reference/list_census_geo_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Geography types. — list_census_geo_types","text":"","code":"if (FALSE) { # Get list of all divisions list_census_geo_types()  }"},{"path":"/reference/list_census_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get census geographies, filterable — list_census_tables","title":"Get census geographies, filterable — list_census_tables","text":"Get list available geopgrahies, filterable type name.","code":""},{"path":"/reference/list_census_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get census geographies, filterable — list_census_tables","text":"","code":"list_census_tables(number = NULL, table_name_regex = NULL)"},{"path":"/reference/list_census_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get census geographies, filterable — list_census_tables","text":"number vector containing one table numbers table_name_regex string regular expression filter table names (.e. elements containing Country : \"Country\")","code":""},{"path":"/reference/list_census_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get census geographies, filterable — list_census_tables","text":"tibble, showing geo type, available year","code":""},{"path":"/reference/list_census_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get census geographies, filterable — list_census_tables","text":"","code":"if (FALSE) { # Get list of all divisions list_census_geo()  }"},{"path":"/reference/list_census_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Census years. — list_census_years","title":"Get Census years. — list_census_years","text":"simple function listing Census years included package, data pack imported.","code":""},{"path":"/reference/list_census_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Census years. — list_census_years","text":"","code":"list_census_years(mode = \"available\")"},{"path":"/reference/list_census_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Census years. — list_census_years","text":"mode Either \"listed\" \"available","code":""},{"path":"/reference/list_census_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Census years. — list_census_years","text":"vector years","code":""},{"path":"/reference/list_census_years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Census years. — list_census_years","text":"","code":"if (FALSE) { # Get list of all divisions list_census_years()  }"}]
